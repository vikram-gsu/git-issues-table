[
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16630",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16630/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16630/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16630/events",
    "html_url": "https://github.com/facebook/react/issues/16630",
    "id": 487775992,
    "node_id": "MDU6SXNzdWU0ODc3NzU5OTI=",
    "number": 16630,
    "title": "Can't use instance values without refs",
    "user": {
      "login": "ysulyma",
      "id": 453486,
      "node_id": "MDQ6VXNlcjQ1MzQ4Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/453486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ysulyma",
      "html_url": "https://github.com/ysulyma",
      "followers_url": "https://api.github.com/users/ysulyma/followers",
      "following_url": "https://api.github.com/users/ysulyma/following{/other_user}",
      "gists_url": "https://api.github.com/users/ysulyma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ysulyma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ysulyma/subscriptions",
      "organizations_url": "https://api.github.com/users/ysulyma/orgs",
      "repos_url": "https://api.github.com/users/ysulyma/repos",
      "events_url": "https://api.github.com/users/ysulyma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ysulyma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-08-31T14:31:51Z",
    "updated_at": "2019-08-31T14:39:19Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I am experimenting with migrating some of my class components to Hooks. My use case is explained in detail [here](https://stackoverflow.com/questions/57722818/idiomatic-react-with-heavy-dom-manipulation-mathjax), but I can quickly explain the idea.\r\n\r\nI have a class component `<MJX>` which exposes a `.ready` Promise. Since `<MJX>` produces a `<span>` element, I guess I can use the `useImperativeHandle` hook to attach `.ready` to the ref I use for the `<span>`. This is no problem.\r\n\r\nHowever, I also have a class component `<RenderGroup>` which uses `React.Children` to collect the `.ready` Promises from all its `<MJX>` descendants, and exposes `Promise.all` of that array of Promises as its own `.ready` value. Since `<RenderGroup>` does not produce any markup of its own, and you can't place refs on `<React.Fragment>`, I don't see how to use`useImperativeHandle` here: there's nowhere to attach the ref.\r\n\r\nHere is the relevant code:\r\n\r\n```tsx\r\nexport class RenderGroup extends React.Component {\r\n  private promises: Promise<void>[];\r\n\r\n  ready: Promise<void>;\r\n\r\n  componentDidMount() {\r\n    this.ready = Promise.all(this.promises).then(() => {});\r\n  }\r\n\r\n  render() {\r\n    this.promises = [];\r\n\r\n    return recursiveMap(this.props.children, node => {\r\n      if (shouldInspect(node)) {\r\n        const originalRef = node.ref;\r\n        return React.cloneElement(node, {\r\n          ref: (ref: MJX) => {\r\n            if (!ref) return;\r\n            this.promises.push(ref.ready);\r\n            if (typeof originalRef === \"function\") {\r\n              originalRef(ref);\r\n            } else if (originalRef && typeof originalRef === \"object\") {\r\n              (originalRef as React.MutableRefObject<MJX>).current = ref;\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      return node;\r\n    });\r\n  }\r\n}\r\n\r\nfunction shouldInspect(node: ReactNode): node is React.ReactElement & React.RefAttributes<MJX> {\r\n  return React.isValidElement(node) && typeof node.type === \"function\" && node.type.prototype instanceof MJX;\r\n}\r\n\r\nexport function recursiveMap(\r\n  children: ReactNode,\r\n  fn: (child: ReactNode) => ReactNode\r\n) {\r\n  return React.Children.map(children, (child) => {\r\n    if (!React.isValidElement(child)) {\r\n      return child;\r\n    }\r\n\r\n    if (\"children\" in child.props) {\r\n      child = React.cloneElement(child, {\r\n        children: recursiveMap(child.props.children, fn)\r\n      });\r\n    }\r\n\r\n    return fn(child);\r\n  });\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16629",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16629/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16629/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16629/events",
    "html_url": "https://github.com/facebook/react/issues/16629",
    "id": 487722647,
    "node_id": "MDU6SXNzdWU0ODc3MjI2NDc=",
    "number": 16629,
    "title": "Chrome Extension Background Page and useEffect Not Triggered",
    "user": {
      "login": "mikecann",
      "id": 215033,
      "node_id": "MDQ6VXNlcjIxNTAzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/215033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikecann",
      "html_url": "https://github.com/mikecann",
      "followers_url": "https://api.github.com/users/mikecann/followers",
      "following_url": "https://api.github.com/users/mikecann/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikecann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikecann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikecann/subscriptions",
      "organizations_url": "https://api.github.com/users/mikecann/orgs",
      "repos_url": "https://api.github.com/users/mikecann/repos",
      "events_url": "https://api.github.com/users/mikecann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikecann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-31T02:56:16Z",
    "updated_at": "2019-08-31T03:15:45Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nbug\r\n\r\n**What is the current behavior?**\r\n\r\nWhen using `useEffect` from a background page in a chrome extension the body of the effect isnt triggered.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem.**\r\n\r\nSee the demo project here: https://github.com/mikecann/bgpage-hooks-issue\r\n\r\n**What is the expected behavior?**\r\n\r\n`useEffect` should be triggered\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nIt stopped working somewhere between react 16.8 and 16.9 , you can change the react and react_dom version in the demo project and see that it works as expected in 16.8\r\n\r\n**Workaround**\r\n\r\nFor now the issue can be worked around as demonstrated: https://github.com/mikecann/bgpage-hooks-issue/blob/master/bg.tsx#L5\r\n\r\nSo im not really sure whats going on but perhaps because background pages arent actually visually rendered to the screen then React has optimized things so that effects arent triggered?"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16628",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16628/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16628/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16628/events",
    "html_url": "https://github.com/facebook/react/pull/16628",
    "id": 487712420,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyOTE3MTcw",
    "number": 16628,
    "title": "[react-events] Tap responder",
    "user": {
      "login": "necolas",
      "id": 239676,
      "node_id": "MDQ6VXNlcjIzOTY3Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/necolas",
      "html_url": "https://github.com/necolas",
      "followers_url": "https://api.github.com/users/necolas/followers",
      "following_url": "https://api.github.com/users/necolas/following{/other_user}",
      "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
      "organizations_url": "https://api.github.com/users/necolas/orgs",
      "repos_url": "https://api.github.com/users/necolas/repos",
      "events_url": "https://api.github.com/users/necolas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/necolas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      },
      {
        "id": 1296748300,
        "node_id": "MDU6TGFiZWwxMjk2NzQ4MzAw",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Flare",
        "name": "React Flare",
        "color": "63f2ff",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-31T00:47:35Z",
    "updated_at": "2019-08-31T01:59:51Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/16628",
      "html_url": "https://github.com/facebook/react/pull/16628",
      "diff_url": "https://github.com/facebook/react/pull/16628.diff",
      "patch_url": "https://github.com/facebook/react/pull/16628.patch"
    },
    "body": "TODO: merge the logic shared across the implementations.\r\n\r\nThis is a partial replacement for the 'Press' responder:\r\n\r\n1. `useTap` is scoped to pointers (no keyboard support). Our current thinking is\r\nthat \"responders\" should be limited to working with pointers, and that they can\r\nbe combined with 'useKeyboard' in user-space. For example, we might create a\r\n'usePress' hook in user-space that combines 'useTap' with 'useKeyboard' to react\r\nto both pointers and keyboard interactions.\r\n\r\n2. `useTap` cancels the gesture once the pointer moves over an element that is\r\nnot within the responder target's subtree. This differs from `usePress` (and\r\nReact Native), where the gesture remains active after the pointer exits the\r\ntarget's subtree and is restarted once the pointer reenters. One of the\r\ndrawbacks with the `usePress` behavior is that it requires repeatedly measuring\r\nDOM elements (which can cause jank) to perform hit region tests. `useTap` avoids\r\ndoing this and relies on `document.elementFromPoint` only to support the\r\nTouchEvent fallbacks.\r\n\r\n3. `useTap` calls `onTapUpdate` when the active gesture's state changes,\r\n`onTapEnd` when the gesture successfully completes. and `onTapCancel` when it\r\nfails. There is no `onTap` callback. `usePress` did not explicitly report back\r\nwhen the gesture failed, and product developers were confused about the\r\ndifference between `onPress` and `onPressEnd`.\r\n\r\n4. `useTap` explicitly separates the PointerEvent implementation from the\r\nMouseEvent/TouchEvent fallback.\r\n\r\n5. `useTap` has better unit test coverage . All pointer types and the fallback\r\nenvironment are tested. The shape of the gesture state object is also defined\r\nand tested.\r\n\r\n[Demo](https://codesandbox.io/s/latest-responder-build-rz96j30rp)"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16627",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16627/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16627/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16627/events",
    "html_url": "https://github.com/facebook/react/pull/16627",
    "id": 487689788,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyODk5MzU4",
    "number": 16627,
    "title": "Refactored backend renderer to remove most of the recursion",
    "user": {
      "login": "bvaughn",
      "id": 29597,
      "node_id": "MDQ6VXNlcjI5NTk3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bvaughn",
      "html_url": "https://github.com/bvaughn",
      "followers_url": "https://api.github.com/users/bvaughn/followers",
      "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
      "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
      "organizations_url": "https://api.github.com/users/bvaughn/orgs",
      "repos_url": "https://api.github.com/users/bvaughn/repos",
      "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bvaughn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-30T22:18:13Z",
    "updated_at": "2019-08-31T03:18:42Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/16627",
      "html_url": "https://github.com/facebook/react/pull/16627",
      "diff_url": "https://github.com/facebook/react/pull/16627.diff",
      "patch_url": "https://github.com/facebook/react/pull/16627.patch"
    },
    "body": "DevTools doesn't currently handle extremely deep trees (#16491) or extremely wide trees (#16501) very well, due to recursion in the backend interface. This PR removes _most_ of that.\r\n\r\nAs a sanity test, I confirmed that after this refactor, DevTools was able to handle the following:\r\n```js\r\nconst Child = ({ children = null }) => children;\r\n\r\nconst Deep = () => {\r\n  let children = null;\r\n  for (let i = 0; i < 15000; i++) {\r\n    children = <Child>{children}</Child>;\r\n  }\r\n  return children;\r\n};\r\n\r\nconst Wide = () => {\r\n  let children = [];\r\n  for (let i = 0; i < 15000; i++) {\r\n    children.push(<Child key={i} />);\r\n  }\r\n  return children;\r\n};\r\n```\r\n\r\nMigrated from https://github.com/bvaughn/react-devtools-experimental/pull/385"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16626",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16626/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16626/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16626/events",
    "html_url": "https://github.com/facebook/react/pull/16626",
    "id": 487673132,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyODg2Mzgy",
    "number": 16626,
    "title": "Add Auto Import to Babel Plugin ",
    "user": {
      "login": "lunaruan",
      "id": 2735514,
      "node_id": "MDQ6VXNlcjI3MzU1MTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2735514?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lunaruan",
      "html_url": "https://github.com/lunaruan",
      "followers_url": "https://api.github.com/users/lunaruan/followers",
      "following_url": "https://api.github.com/users/lunaruan/following{/other_user}",
      "gists_url": "https://api.github.com/users/lunaruan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lunaruan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lunaruan/subscriptions",
      "organizations_url": "https://api.github.com/users/lunaruan/orgs",
      "repos_url": "https://api.github.com/users/lunaruan/repos",
      "events_url": "https://api.github.com/users/lunaruan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lunaruan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-30T21:13:36Z",
    "updated_at": "2019-08-30T21:24:19Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/16626",
      "html_url": "https://github.com/facebook/react/pull/16626",
      "diff_url": "https://github.com/facebook/react/pull/16626.diff",
      "patch_url": "https://github.com/facebook/react/pull/16626.patch"
    },
    "body": "This babel transform is a fork of the @babel/plugin-transform-react-jsx transform and is for experimentation purposes only. We don't plan to own this code in the future, and we will upstream this to Babel at some point once we've proven out the concept.\r\n\r\nAs per the [RFC](https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md) to simplify element creation, we want to add the ability to auto import \"react' directly from the babel plugin. This commit updates the babel plugin with **two options**:\r\n\r\n1.) `importSource`: The React module to import from. Defaults to `react`.\r\n2.) `autoImport`: The type of import. Defaults to `none`.\r\n      - `none`: Does not import React. JSX compiles to `React.jsx` etc.\r\n      - `namespace`: `import * as _react from \"react\";`. JSX compiles to `_react.jsx` etc.\r\n      - `default`: `import _default from \"react\";` JSX compiles to `_default.jsx` etc.\r\n      - `namedExports`: `import {jsx as _jsx} from \"react\";` JSX compiles to `_jsx` etc.\r\n      - `require`: `var _react = _interopRequireWildcard(require(\"react\"));`. jSX compiles to `_react.jsx` etc.\r\n\r\n`namespace`, `default`, and `namedExports` can only be used when `sourceType: module` and `require ` can only be used when `sourceType: script`.\r\n\r\nWe plan to test #16432 before landing this diff."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16623",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16623/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16623/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16623/events",
    "html_url": "https://github.com/facebook/react/pull/16623",
    "id": 487600825,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyODMwMDg0",
    "number": 16623,
    "title": "use-subscription tearing fix",
    "user": {
      "login": "bvaughn",
      "id": 29597,
      "node_id": "MDQ6VXNlcjI5NTk3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bvaughn",
      "html_url": "https://github.com/bvaughn",
      "followers_url": "https://api.github.com/users/bvaughn/followers",
      "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
      "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
      "organizations_url": "https://api.github.com/users/bvaughn/orgs",
      "repos_url": "https://api.github.com/users/bvaughn/repos",
      "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bvaughn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-30T17:47:29Z",
    "updated_at": "2019-08-30T22:08:43Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/16623",
      "html_url": "https://github.com/facebook/react/pull/16623",
      "diff_url": "https://github.com/facebook/react/pull/16623.diff",
      "patch_url": "https://github.com/facebook/react/pull/16623.patch"
    },
    "body": "Adds a test (previously failing) and a fix for a potential tearing case reported in #16396.\r\n\r\nResolves #16396"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16619",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16619/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16619/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16619/events",
    "html_url": "https://github.com/facebook/react/issues/16619",
    "id": 487442458,
    "node_id": "MDU6SXNzdWU0ODc0NDI0NTg=",
    "number": 16619,
    "title": "Better support for internal use of forwardRef",
    "user": {
      "login": "MilosRasic",
      "id": 533052,
      "node_id": "MDQ6VXNlcjUzMzA1Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/533052?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MilosRasic",
      "html_url": "https://github.com/MilosRasic",
      "followers_url": "https://api.github.com/users/MilosRasic/followers",
      "following_url": "https://api.github.com/users/MilosRasic/following{/other_user}",
      "gists_url": "https://api.github.com/users/MilosRasic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MilosRasic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MilosRasic/subscriptions",
      "organizations_url": "https://api.github.com/users/MilosRasic/orgs",
      "repos_url": "https://api.github.com/users/MilosRasic/repos",
      "events_url": "https://api.github.com/users/MilosRasic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MilosRasic/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-08-30T11:51:30Z",
    "updated_at": "2019-08-30T12:04:32Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nNot sure. The core of the issue is `React.forwardRef` passing `null` as `ref` argument to the wrapped component if the parent component doesn't pass a ref. `undefined` would be better in this case, but there might be a reason to pass `null` that I'm not aware of, so I'm not comfortable calling this a bug.\r\n\r\n**What is the current behavior?**\r\n\r\nGiven:\r\n```javascript\r\nexport default React.forwardRef((props, ref) => <MyComponent innerRef={ref} {...props} />);\r\n```\r\n\r\n`MyComponent` will receive `null` as `ref` argument when a parent component doesn't pass a ref. Leaving aside that `undefined` better represent the fact that something was not passed than `null`, this also makes it impossible to use the forwarded ref internally in `MyComponent` because it will be `null` and we cannot reassign the prop.\r\n\r\nI've been able to work around this using the following solution (excuse my classyness please, shouldn't matter much for the example):\r\n```javascript\r\nclass MyComponent extends React.Component {\r\n\tel = React.createRef();\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!this.el.current) {\r\n\t\t\tthis.el = this.props.innerRef;\r\n\t\t}\r\n\r\n\t\tif (!this.el.current) return;\r\n\r\n\t\t// bind event handlers to this.el\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst childRef = this.props.innerRef || this.el;\r\n\r\n\t\treturn <button ref={childRef}>Look at my button</button>;\r\n\t}\r\n}\r\n```\r\n\r\nWhile the above works, it's not the nicest piece of code and there's code in two places in order to support adapting to the case when parent doesn't pass a ref.\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\nNot only is `undefined` a less surprising value for `ref` argument when no ref is passed by the parent, but I think it would also allow us to use `defaultProps` to make a new ref the default when nothing is passed in. My initial attempt was something like:\r\n```javascript\r\nclass MyComponent extends React.Component {\r\n\tstatic defaultProps = {\r\n\t\tinnerRef: React.createRef(),\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!this.innerRef.current) return;\r\n\r\n\t\t// bind event handlers to this.innerRef.current\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <button ref={innerRef}>Look at my button</button>;\r\n\t}\r\n}\r\n```\r\nbut it didn't work because `innerRef` is `null`.\r\n\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact 16.9.0\r\nChrome 76.0.3809.132 on Linux\r\nDidn't try with older versions of React or in other browsers.\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16617",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16617/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16617/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16617/events",
    "html_url": "https://github.com/facebook/react/pull/16617",
    "id": 487321866,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyNjA5NjEx",
    "number": 16617,
    "title": "[DevTools] [Context] Legacy Context",
    "user": {
      "login": "hristo-kanchev",
      "id": 23095052,
      "node_id": "MDQ6VXNlcjIzMDk1MDUy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/23095052?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hristo-kanchev",
      "html_url": "https://github.com/hristo-kanchev",
      "followers_url": "https://api.github.com/users/hristo-kanchev/followers",
      "following_url": "https://api.github.com/users/hristo-kanchev/following{/other_user}",
      "gists_url": "https://api.github.com/users/hristo-kanchev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hristo-kanchev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hristo-kanchev/subscriptions",
      "organizations_url": "https://api.github.com/users/hristo-kanchev/orgs",
      "repos_url": "https://api.github.com/users/hristo-kanchev/repos",
      "events_url": "https://api.github.com/users/hristo-kanchev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hristo-kanchev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-08-30T07:00:41Z",
    "updated_at": "2019-08-31T08:06:37Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/16617",
      "html_url": "https://github.com/facebook/react/pull/16617",
      "diff_url": "https://github.com/facebook/react/pull/16617.diff",
      "patch_url": "https://github.com/facebook/react/pull/16617.patch"
    },
    "body": "Fixes: #16466 \r\n\r\n**Description**:\r\nWe are now changing the context label in DevTools based on if the component is using the legacy way of adding context. \r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16614",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16614/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16614/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16614/events",
    "html_url": "https://github.com/facebook/react/pull/16614",
    "id": 487230947,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyNTM5MjMw",
    "number": 16614,
    "title": "[Hydration Bugfix] Updates to dehydrated content when `disableSchedulerTimeoutBasedOnReactExpirationTime` is enabled",
    "user": {
      "login": "acdlite",
      "id": 3624098,
      "node_id": "MDQ6VXNlcjM2MjQwOTg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/acdlite",
      "html_url": "https://github.com/acdlite",
      "followers_url": "https://api.github.com/users/acdlite/followers",
      "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
      "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
      "organizations_url": "https://api.github.com/users/acdlite/orgs",
      "repos_url": "https://api.github.com/users/acdlite/repos",
      "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
      "received_events_url": "https://api.github.com/users/acdlite/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-30T00:30:20Z",
    "updated_at": "2019-08-30T22:07:16Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/16614",
      "html_url": "https://github.com/facebook/react/pull/16614",
      "diff_url": "https://github.com/facebook/react/pull/16614.diff",
      "patch_url": "https://github.com/facebook/react/pull/16614.patch"
    },
    "body": "## The Bug\r\n\r\nWhen server rendered content that hasn't finished hydrating yet (\"dehydrated\" content) receives an update (via props or context), React has a mechanism to force the content to hydrate before applying the update. It does this by increasing the priority of the hydration task from Idle to a level slightly higher than the current render. React will abort the current render, perform the hydration, then try the update again on top of the now-fully-hydrated content.\r\n\r\nThere are unit tests that cover this case. The bug starts happening when `disableSchedulerTimeoutBasedOnReactExpirationTime` is enabled. It turns out that the mechanism to interrupt the current rendering task depends on the hydration task having a slightly earlier timeout, because Scheduler tasks are sorted by their timeouts. When the hydration task is higher priority, it causes `shouldYield` to flip to true, forcing the render to yield execution and allowing the hydration task to start. (This is similar to how input events can interrupt normal priority renders.)\r\n\r\n`disableSchedulerTimeoutBasedOnReactExpirationTime` breaks this mechanism, because when it is enabled, the timeout given to Scheduler is no longer based on React's internal expiration times. Effectively, all rendering tasks within the same priority category are first-in-first-out. So, the hydration task comes *after* the original task in the Scheduler queue, and therefore `shouldYield` will keep returning `false`, and the original task will run to completion. (See https://github.com/facebook/react/pull/16284 for more information on `disableSchedulerTimeoutBasedOnReactExpirationTime`.)\r\n\r\nThe first commit in this PR adds a regression test for this case.\r\n\r\n## The Fix\r\n\r\nThere are several potential fixes. The one I've chosen is not ideal in the long term, but it's lower risk compared to the complete solution, which will likely require some refactoring of how rendering tasks are scheduled.\r\n\r\nThe work loop already has some logic to cancel a rendering task in favor of a higher priority one, using `Scheduler.cancelCallback`. It does this by comparing the React expiration times of each task, so it doesn't depend on the ordering of tasks in Scheduler. This works when the high priority task is received during an input event.\r\n\r\nHowever, `Scheduler.cancelCallback` is currently a no-op when given an already-running task. It does not cause the task to stop execution, and if the task does yield with a continuation, then the continuation will run. Which means it won't work if React is already inside the render phase. (Note the distinction between \"inside the render phase\" versus \"in an event that fires in between two chunks of a time sliced task.\")\r\n\r\nThe fix in the second commit addresses both parts: canceling the current task causes `shouldYield` to return `true`, and if the canceled task returns a continuation, the continuation is ignored.\r\n\r\nThis is sufficient to fix the regression.\r\n\r\n## Alternative Fixes\r\n\r\nA proper fix would be to model interruptions of in-progress renders in such a way that it does not depend on Scheduler's semantics for canceling and yielding. However, because of the inherent risk involved in changing how rendering tasks are scheduled, I would prefer to land this smaller fix first before attempting a refactor.\r\n\r\n(There's already a planned mini-refactor of the work loop, e.g. to optimize how pings and restarts are modeled. We can fold this into that larger change.)"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16612",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16612/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16612/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16612/events",
    "html_url": "https://github.com/facebook/react/pull/16612",
    "id": 487047856,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyMzg5NDcx",
    "number": 16612,
    "title": "[DevTools] [Profiler]: Save profile now working in Firefox",
    "user": {
      "login": "hristo-kanchev",
      "id": 23095052,
      "node_id": "MDQ6VXNlcjIzMDk1MDUy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/23095052?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hristo-kanchev",
      "html_url": "https://github.com/hristo-kanchev",
      "followers_url": "https://api.github.com/users/hristo-kanchev/followers",
      "following_url": "https://api.github.com/users/hristo-kanchev/following{/other_user}",
      "gists_url": "https://api.github.com/users/hristo-kanchev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hristo-kanchev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hristo-kanchev/subscriptions",
      "organizations_url": "https://api.github.com/users/hristo-kanchev/orgs",
      "repos_url": "https://api.github.com/users/hristo-kanchev/repos",
      "events_url": "https://api.github.com/users/hristo-kanchev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hristo-kanchev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-29T16:00:44Z",
    "updated_at": "2019-08-29T17:38:18Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/16612",
      "html_url": "https://github.com/facebook/react/pull/16612",
      "diff_url": "https://github.com/facebook/react/pull/16612.diff",
      "patch_url": "https://github.com/facebook/react/pull/16612.patch"
    },
    "body": "Fixes: #16527 \r\n\r\n**Description**:\r\nBasically the reason for FF to block it with the previous implementation was that we didn't have a physical DOMNode for the download anchor tag.\r\n\r\nWith this fix we now pass a `HTMLAnchorElement` to the `downloadFile` function in order to set the correct attributes.\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16611",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16611/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16611/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16611/events",
    "html_url": "https://github.com/facebook/react/issues/16611",
    "id": 487047673,
    "node_id": "MDU6SXNzdWU0ODcwNDc2NzM=",
    "number": 16611,
    "title": "Error message when calling work.commit in commit phase",
    "user": {
      "login": "eps1lon",
      "id": 12292047,
      "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12292047?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eps1lon",
      "html_url": "https://github.com/eps1lon",
      "followers_url": "https://api.github.com/users/eps1lon/followers",
      "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
      "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
      "organizations_url": "https://api.github.com/users/eps1lon/orgs",
      "repos_url": "https://api.github.com/users/eps1lon/repos",
      "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eps1lon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-08-29T16:00:22Z",
    "updated_at": "2019-08-29T16:00:22Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "This was me just toying around with unstable APIs. I don't know what these can be used for. Just tried to make sense of them from their names.\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nerror message of `batch.commit()` is confusing\r\n\r\n**What is the current behavior?**\r\n\r\nI was experimenting with the `unstable_create(Sync)Root` APIs and just tried to piece together what goes where. While looking through the source I found that the `Work` returned from `createRoot` has a parameter called `onCommit`. For me this implied it's called after the commit [which doesn't seem to be intended](https://github.com/facebook/react/blob/0ca28b526496b4c9cc523e222beffeda73af7172/packages/react-dom/src/__tests__/ReactDOMRoot-test.js#L58). However given the code below I get `Uncaught Invariant Violation: work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.`\r\n\r\n```js\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Hello CodeSandbox</h1>\r\n      <h2>Start editing to see some magic happen!</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = ReactDOM.unstable_createRoot(rootElement);\r\n\r\nroot.render(<App />).then(() => {\r\n  const batch = root.createBatch();\r\n\r\n  batch.render(<App />);\r\n  // bad\r\n  batch.commit();\r\n  setTimeout(() => {\r\n    // good\r\n    //batch.commit()\r\n  }, 0);\r\n  batch.then(() => {\r\n    // good\r\n    //batch.commit();\r\n  });\r\n});\r\n\r\n```\r\n\r\nThree things I noticed:\r\n1. seems like I need to call batch.commit after the batch is complete. Changing it to \r\n```\r\nbatch.then(() => {\r\n  // good\r\n  batch.commit();\r\n});\r\n```\r\ngot rid of the error. But I noticed that the original code is used throughout the internal tests. In fact moving createBatch and batch.commit the batch well after (long timeout) the initial root.render call seemed to allow sync `batch.render; batch.commit`.\r\n\r\n2. \"lifecycle\" should be replaced with something different before these APIs get stable since we try to get away from this mental model. \r\n\r\nFor example [`applies setState in componentDidMount synchronously in a batch`](https://github.com/facebook/react/blob/4d307de458dfdf25e704cb2ca20b0578bba8998c/packages/react-dom/src/__tests__/ReactDOMRoot-test.js#L143) could be converted to a sync test and still pass while I would've expected [`can defer a commit by batching it`](https://github.com/facebook/react/blob/4d307de458dfdf25e704cb2ca20b0578bba8998c/packages/react-dom/src/__tests__/ReactDOMRoot-test.js#L132) to fail with the invariant violation from above.\r\n\r\n3. Not all lifecycles are \"during rendering\" as far as I know. `componentDidUpdate` is called during commit.\r\n\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nhttps://codesandbox.io/s/dreamy-wood-dvzrp\r\n\r\n**What is the expected behavior?**\r\n\r\nI'm basically asking when it's safe to call `batch.commit`: \r\n* [ ] during render phase\r\n* [ ] during commit phase \r\n* [ ] outside of these phases e.g. in some `onComplete` callback \r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n`react(-dom)@16.9.0`\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16609",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16609/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16609/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16609/events",
    "html_url": "https://github.com/facebook/react/issues/16609",
    "id": 486953645,
    "node_id": "MDU6SXNzdWU0ODY5NTM2NDU=",
    "number": 16609,
    "title": "How do we replace an element with DOM instead of inserting a DOM into an element when hydrating?",
    "user": {
      "login": "lightnet328",
      "id": 2351326,
      "node_id": "MDQ6VXNlcjIzNTEzMjY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2351326?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lightnet328",
      "html_url": "https://github.com/lightnet328",
      "followers_url": "https://api.github.com/users/lightnet328/followers",
      "following_url": "https://api.github.com/users/lightnet328/following{/other_user}",
      "gists_url": "https://api.github.com/users/lightnet328/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lightnet328/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lightnet328/subscriptions",
      "organizations_url": "https://api.github.com/users/lightnet328/orgs",
      "repos_url": "https://api.github.com/users/lightnet328/repos",
      "events_url": "https://api.github.com/users/lightnet328/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lightnet328/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-08-29T13:19:07Z",
    "updated_at": "2019-08-29T13:19:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I think we have the following issue.\r\n\r\nhttps://stackoverflow.com/questions/55611192/reactdom-hydrate-replace-container-instead-of-inserting-into\r\n\r\nIn preact, a new feature was added to solve this issue.\r\n\r\nhttps://github.com/preactjs/preact/pull/1557\r\n\r\nIt would be useful for partial server-side rendering if we can do this. Can we replace an element with DOM instead of inserting a DOM into an element when hydrating? Or, do you have any plans to implement new features to solve this?"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16607",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16607/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16607/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16607/events",
    "html_url": "https://github.com/facebook/react/pull/16607",
    "id": 486802688,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyMTkyMDkw",
    "number": 16607,
    "title": "[eslint-plugin-react-hooks] Added meta property (including docs)",
    "user": {
      "login": "ghmcadams",
      "id": 16076085,
      "node_id": "MDQ6VXNlcjE2MDc2MDg1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/16076085?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghmcadams",
      "html_url": "https://github.com/ghmcadams",
      "followers_url": "https://api.github.com/users/ghmcadams/followers",
      "following_url": "https://api.github.com/users/ghmcadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghmcadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghmcadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghmcadams/subscriptions",
      "organizations_url": "https://api.github.com/users/ghmcadams/orgs",
      "repos_url": "https://api.github.com/users/ghmcadams/repos",
      "events_url": "https://api.github.com/users/ghmcadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghmcadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-29T08:04:12Z",
    "updated_at": "2019-08-29T08:08:24Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/16607",
      "html_url": "https://github.com/facebook/react/pull/16607",
      "diff_url": "https://github.com/facebook/react/pull/16607.diff",
      "patch_url": "https://github.com/facebook/react/pull/16607.patch"
    },
    "body": "ESLint v4.15.0 added an official location for rules to store metadata such as a URL to their documentation (see eslint/eslint#9788). This adds the URL to all the existing rules so anything consuming them can know where their documentation is without having to resort to external packages to guess.  Plugins such as this one can also help the ESLint ecosystem benefit from the same information by adding the `type` and `docs` properties to the `meta` object in their rule definitions.\r\n\r\nIn order to allow my vscode extension [lintlens](https://marketplace.visualstudio.com/items?itemName=ghmcadams.lintlens) to direct users to the right documentation, this PR adds/updates the meta property (in accordance with ESLint's [Rule Basics](https://eslint.org/docs/developer-guide/working-with-rules#rule-basics)) to each of the rules in the `eslint-plugin-react-hooks` package.\r\n\r\nI tried my best to determine the correct values for `type`, `docs.description`, `docs.category`, and `docs.url`.  Usually, plugins would place a markdown file under `/docs/rules` (EX: [ESLint Rules](https://github.com/eslint/eslint/tree/master/docs/rules)) for each rule and use that as the url property value.  I did not include such documentation myself.  Rather, I pointed to existing documentation for each rule:\r\n- exhaustive-deps: [https://github.com/facebook/react/issues/14920](https://github.com/facebook/react/issues/14920)\r\n- rules-of-hooks: [https://reactjs.org/docs/hooks-rules.html](https://reactjs.org/docs/hooks-rules.html)"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16606",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16606/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16606/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16606/events",
    "html_url": "https://github.com/facebook/react/issues/16606",
    "id": 486744596,
    "node_id": "MDU6SXNzdWU0ODY3NDQ1OTY=",
    "number": 16606,
    "title": "TypeError: \"'requestAnimationFrame' called on an object that does not implement interface Window.\"",
    "user": {
      "login": "Jack-Works",
      "id": 5390719,
      "node_id": "MDQ6VXNlcjUzOTA3MTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5390719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jack-Works",
      "html_url": "https://github.com/Jack-Works",
      "followers_url": "https://api.github.com/users/Jack-Works/followers",
      "following_url": "https://api.github.com/users/Jack-Works/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jack-Works/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jack-Works/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jack-Works/subscriptions",
      "organizations_url": "https://api.github.com/users/Jack-Works/orgs",
      "repos_url": "https://api.github.com/users/Jack-Works/repos",
      "events_url": "https://api.github.com/users/Jack-Works/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jack-Works/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1155972012,
        "node_id": "MDU6TGFiZWwxMTU1OTcyMDEy",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Scheduler",
        "name": "Component: Scheduler",
        "color": "9de8f9",
        "default": false
      },
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-08-29T05:25:38Z",
    "updated_at": "2019-08-31T01:25:21Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?** **Bug**\r\n\r\n**What is the current behavior?**\r\nTypeError: \"'requestAnimationFrame' called on an object that does not implement interface Window.\"\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nhttps://github.com/facebook/react/blob/0f6e3cd61cf4a5a1491bb3c92780936aebc2a146/packages/scheduler/src/forks/SchedulerHostConfig.default.js#L88\r\n\r\nIn the WebExtension content script, globalThis !== window.\r\nSo when `const requestAnimationFrame = window.requestAnimationFrame`, the `this` binding of `rAF` is lost.\r\n\r\nIn the after calling, `rAF` rebinds to the globalThis, but globalThis doesn't implements Window interface.\r\n\r\nPoC: Install this extension in the Firefox and you will see the error reported.\r\n```index.js\r\ntry {\r\n    const raf = window.requestAnimationFrame\r\n    raf(() => console.log('Okay.'))\r\n} catch (e) {\r\n    console.warn(e)\r\n}\r\n```\r\n\r\n```manifest.json\r\n{\r\n    \"name\": \"rAF in content script test\",\r\n    \"version\": \"0.0.1\",\r\n    \"manifest_version\": 2,\r\n    \"content_scripts\": [{ \"js\": [\"/index.js\"], \"matches\": [\"<all_urls>\"] }]\r\n}\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nFirefox, in WebExtension. \r\n\r\nRelated to https://github.com/facebook/react/issues/16605"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16605",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16605/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16605/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16605/events",
    "html_url": "https://github.com/facebook/react/issues/16605",
    "id": 486730933,
    "node_id": "MDU6SXNzdWU0ODY3MzA5MzM=",
    "number": 16605,
    "title": "logCapturedError ate our error message",
    "user": {
      "login": "Jack-Works",
      "id": 5390719,
      "node_id": "MDQ6VXNlcjUzOTA3MTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5390719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jack-Works",
      "html_url": "https://github.com/Jack-Works",
      "followers_url": "https://api.github.com/users/Jack-Works/followers",
      "following_url": "https://api.github.com/users/Jack-Works/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jack-Works/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jack-Works/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jack-Works/subscriptions",
      "organizations_url": "https://api.github.com/users/Jack-Works/orgs",
      "repos_url": "https://api.github.com/users/Jack-Works/repos",
      "events_url": "https://api.github.com/users/Jack-Works/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jack-Works/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-08-29T04:30:07Z",
    "updated_at": "2019-08-29T04:30:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?** **Bug**\r\n\r\n**What is the current behavior?** \r\n![image](https://user-images.githubusercontent.com/5390719/63910087-ee455f00-ca57-11e9-941a-f934d1525f01.png)\r\n\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nOur application is run in a very complicated environment. It's hard to do that.\r\n\r\n**What is the expected behavior?**\r\nI change the bundled file, add `console.error(error)` in `logCapturedError`\r\n\r\nAnd the correct error and it's stack is printed.\r\n\r\n![image](https://user-images.githubusercontent.com/5390719/63910242-7461a580-ca58-11e9-9bb8-9e1f8f58c10e.png)\r\n\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nI'm debugging in Firefox Developement Edition. And the code is running in the WebExtension environment. Please consider if the following code is correct in Firefox\r\n```\r\n// Browsers support silencing uncaught errors by calling\r\n    // `preventDefault()` in window `error` handler.\r\n    // We record this information as an expando on the error.\r\n\r\n    if (error != null && error._suppressLogging) {\r\n      if (errorBoundaryFound && willRetry) {\r\n        // The error is recoverable and was silenced.\r\n        // Ignore it and don't print the stack addendum.\r\n        // This is handy for testing error boundaries without noise.\r\n        return;\r\n      }\r\n      // The error is fatal. Since the silencing might have\r\n      // been accidental, we'll surface it anyway.\r\n      // However, the browser would have silenced the original error\r\n      // so we'll print it first, and then print the stack addendum.\r\n      console.error(error);\r\n      // For a more detailed description of this block, see:\r\n      // https://github.com/facebook/react/pull/13384\r\n    }\r\n```"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16604",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16604/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16604/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16604/events",
    "html_url": "https://github.com/facebook/react/issues/16604",
    "id": 486657610,
    "node_id": "MDU6SXNzdWU0ODY2NTc2MTA=",
    "number": 16604,
    "title": "How should we set up apps for HMR now that this replaces react-hot-loader?",
    "user": {
      "login": "shirakaba",
      "id": 14055146,
      "node_id": "MDQ6VXNlcjE0MDU1MTQ2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/14055146?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shirakaba",
      "html_url": "https://github.com/shirakaba",
      "followers_url": "https://api.github.com/users/shirakaba/followers",
      "following_url": "https://api.github.com/users/shirakaba/following{/other_user}",
      "gists_url": "https://api.github.com/users/shirakaba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shirakaba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shirakaba/subscriptions",
      "organizations_url": "https://api.github.com/users/shirakaba/orgs",
      "repos_url": "https://api.github.com/users/shirakaba/repos",
      "events_url": "https://api.github.com/users/shirakaba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shirakaba/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929155,
        "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
        "name": "Type: Question",
        "color": "cc317c",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-08-28T23:30:26Z",
    "updated_at": "2019-08-29T15:34:57Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Dan Abramov mentioned that Devtools v4 will be making `react-hot-loader` obsolete: https://twitter.com/dan_abramov/status/1144715740983046144?s=20\r\n\r\n> **Me:**\r\n> I have this hook:\r\n> ```require(\"react-reconciler\")(hostConfig).injectIntoDevTools(opts);```\r\n> But HMR has always worked completely without it. Is this now a new requirement?\r\n\r\n> **Dan:**\r\n> Yes, that's what the new mechanism uses. The new mechanism doesn't need \"react-hot-loader\" so by the time you update, you'd want to remove that package. (It's pretty invasive)\r\n\r\nI can't see any mention of HMR in the Devtools documentation, however; now that `react-hot-loader` has become obsolete (and with it, the `require(\"react-hot-loader/root\").hot` method), how should we set up apps for HMR in:\r\n\r\n* React DOM apps\r\n* React Native apps\r\n* React custom renderer apps\r\n\r\nI'd be particularly interested in a migration guide specifically for anyone who's already set up HMR via `react-hot-loader`.\r\n\r\nAlso, for HMR, does it matter whether we're using the standalone Devtools or the browser-extension Devtools?"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16599",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16599/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16599/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16599/events",
    "html_url": "https://github.com/facebook/react/issues/16599",
    "id": 486431379,
    "node_id": "MDU6SXNzdWU0ODY0MzEzNzk=",
    "number": 16599,
    "title": "New plugin not working after change any props in debugger tools",
    "user": {
      "login": "sagar-k",
      "id": 7201068,
      "node_id": "MDQ6VXNlcjcyMDEwNjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7201068?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sagar-k",
      "html_url": "https://github.com/sagar-k",
      "followers_url": "https://api.github.com/users/sagar-k/followers",
      "following_url": "https://api.github.com/users/sagar-k/following{/other_user}",
      "gists_url": "https://api.github.com/users/sagar-k/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sagar-k/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sagar-k/subscriptions",
      "organizations_url": "https://api.github.com/users/sagar-k/orgs",
      "repos_url": "https://api.github.com/users/sagar-k/repos",
      "events_url": "https://api.github.com/users/sagar-k/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sagar-k/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710573595,
        "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
        "name": "Component: Developer Tools",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-08-28T14:49:53Z",
    "updated_at": "2019-08-28T14:59:48Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nHaving an issue\r\n\r\n**What is the current behavior?**\r\nnot able to see any rendering after changing any props in debugging tool. and also getting below issue \r\n![image](https://user-images.githubusercontent.com/7201068/63866449-d7a7f500-c9d0-11e9-80dd-a19d0456711c.png)\r\n\r\nUncaught TypeError: Cannot read property '_reactInternalInstance' of undefined\r\n    at Object.get (react-dom.min.js:formatted:4200)\r\n    at a (react-dom.min.js:formatted:4937)\r\n    at Object.enqueueForceUpdate (react-dom.min.js:formatted:4965)\r\n    at s (backend.js:9)\r\n    at Object.setInProps (backend.js:9)\r\n    at t.<anonymous> (backend.js:1)\r\n    at t.l.emit (backend.js:1)\r\n    at backend.js:9\r\n    at t (backend.js:1)\r\n\r\n\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nReproduce bug.\r\ntry to change any dynamic pros in the debugger tools section and you will not able to see any DOM changes\r\n\r\n**What is the expected behavior?**\r\n\r\nWhenever change any props in debugger tools. react component should be rendered as per it.\r\nIt was working fine with previous react developer tools chrome plugin \r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nI am using the below version.\r\n\"react\": \"15.6.2\",\r\n   \"react-dom\": \"15.6.2\",\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16593",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16593/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16593/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16593/events",
    "html_url": "https://github.com/facebook/react/issues/16593",
    "id": 486205725,
    "node_id": "MDU6SXNzdWU0ODYyMDU3MjU=",
    "number": 16593,
    "title": "Stucking in an infinite loop when add some breakpoints between  `ReactFiberWorkLoop.js#L876` and `#L891``",
    "user": {
      "login": "lintuming",
      "id": 37504587,
      "node_id": "MDQ6VXNlcjM3NTA0NTg3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/37504587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lintuming",
      "html_url": "https://github.com/lintuming",
      "followers_url": "https://api.github.com/users/lintuming/followers",
      "following_url": "https://api.github.com/users/lintuming/following{/other_user}",
      "gists_url": "https://api.github.com/users/lintuming/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lintuming/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lintuming/subscriptions",
      "organizations_url": "https://api.github.com/users/lintuming/orgs",
      "repos_url": "https://api.github.com/users/lintuming/repos",
      "events_url": "https://api.github.com/users/lintuming/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lintuming/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-08-28T07:28:16Z",
    "updated_at": "2019-08-30T15:25:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nmaybe a bug\r\n**What is the current behavior?**\r\nIn `ReactFiberWorkLoop.js`,if you add some **breakpoint** between line 876 and 891,It seems the condiction in [#L881](https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiberWorkLoop.js#L881) always pass,and it return `renderRoot` as continuation,which cause an infinite loop.\r\nIt seems the  `currentTime` equal to  `expirationTime` if without any breakpoints.\r\n\r\n**What is the expected behavior?**\r\nMaybe it's not a bug,it only happens when you add a breakpoint between line 876 and line 891.\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nReact 16.9.0, Chrome"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16591",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16591/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16591/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16591/events",
    "html_url": "https://github.com/facebook/react/pull/16591",
    "id": 486105676,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzExNjI2ODYx",
    "number": 16591,
    "title": "[Partial Hydration] Don't invoke listeners on parent of dehydrated event target",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-08-28T00:57:03Z",
    "updated_at": "2019-08-28T14:53:42Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/16591",
      "html_url": "https://github.com/facebook/react/pull/16591",
      "diff_url": "https://github.com/facebook/react/pull/16591.diff",
      "patch_url": "https://github.com/facebook/react/pull/16591.patch"
    },
    "body": "If an event gets invoked on a child of a suspense boundary we haven't hydrated yet, that's an opportunity where we might want to consider replaying it instead. In the existing semantics there exist no replaying, instead things are ignored (see #16532). So this PR makes sure we don't dispatch these events to React's event system. They may still have been invoked on non-React nodes.\r\n\r\nHowever the tricky part is that we don't readily know if a node is a non-React DOM node or if it's just a node we haven't gotten to yet. We can't just mark the node as dehydrated since the server streaming can update the content of dehydrated boundaries as they go and that would lose the markers.\r\n\r\nHowever, typically there will at least be some React DOM node that is a parent of the Suspense boundary so that will normally become the target today. We also need to deal with the same case when there is a Suspense boundary at the root and while the root most level is concurrently hydrating.\r\n\r\nIn the case where there is a parent React DOM node, we don't know if the target node was a non-React DOM node that someone manually inserted or if it is a child of a dehydrated boundary.\r\n\r\nThe common case is that if it's a DOM node that someone messes with, it won't have any children so we can use that as a quick bailout to assume it's not a React node.\r\n\r\nIf it does have children, I backtrack on the previous siblings to see if we're nested inside a Suspense boundary (i.e. if we're inside two comment nodes). This could potentially be expensive if there are many previous siblings but most of the time there's only one direct DOM node inside a Suspense boundary, and it's unusual that it wouldn't be a Suspense boundary in this case. The worst case is that this is happening on a non-React node and that the React parent happens to have a child that renders null or something in it, and also that this has many children in it."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16589",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16589/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16589/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16589/events",
    "html_url": "https://github.com/facebook/react/issues/16589",
    "id": 486023593,
    "node_id": "MDU6SXNzdWU0ODYwMjM1OTM=",
    "number": 16589,
    "title": "Confusing error when passing non-function to useMemo",
    "user": {
      "login": "aweary",
      "id": 6886061,
      "node_id": "MDQ6VXNlcjY4ODYwNjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aweary",
      "html_url": "https://github.com/aweary",
      "followers_url": "https://api.github.com/users/aweary/followers",
      "following_url": "https://api.github.com/users/aweary/following{/other_user}",
      "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
      "organizations_url": "https://api.github.com/users/aweary/orgs",
      "repos_url": "https://api.github.com/users/aweary/repos",
      "events_url": "https://api.github.com/users/aweary/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aweary/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1109410193,
        "node_id": "MDU6TGFiZWwxMTA5NDEwMTkz",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Hooks",
        "name": "Component: Hooks",
        "color": "c2f27b",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-27T20:41:37Z",
    "updated_at": "2019-08-29T13:55:53Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "\r\n\r\n[Example](https://codesandbox.io/s/boring-albattani-grhhp).\r\n\r\nWhen passing something like an object to `useMemo` the error isn't very helpful.\r\n\r\n```\r\nTypeError: nextCreate is not a function\r\n    at mountMemo (https://grhhp.csb.app/node_modules/react-dom/cjs/react-dom.development.js:13459:19)\r\n    ...\r\n```\r\n\r\nMost developers wont know what `nextCreate` is, and passing an object to `useMemo` doesn't seem _obviously_ wrong at first. We could add a `typeof` check that throws a better error, but maybe that's too much overhead? At the very least we could add a DEV warning with more helpful guidance."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16585",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16585/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16585/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16585/events",
    "html_url": "https://github.com/facebook/react/issues/16585",
    "id": 485847978,
    "node_id": "MDU6SXNzdWU0ODU4NDc5Nzg=",
    "number": 16585,
    "title": "useState's setState hangs when called in closed window",
    "user": {
      "login": "aaronjensen",
      "id": 8588,
      "node_id": "MDQ6VXNlcjg1ODg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aaronjensen",
      "html_url": "https://github.com/aaronjensen",
      "followers_url": "https://api.github.com/users/aaronjensen/followers",
      "following_url": "https://api.github.com/users/aaronjensen/following{/other_user}",
      "gists_url": "https://api.github.com/users/aaronjensen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aaronjensen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aaronjensen/subscriptions",
      "organizations_url": "https://api.github.com/users/aaronjensen/orgs",
      "repos_url": "https://api.github.com/users/aaronjensen/repos",
      "events_url": "https://api.github.com/users/aaronjensen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aaronjensen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-08-27T14:32:08Z",
    "updated_at": "2019-08-27T14:32:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug\r\n\r\n**What is the current behavior?**\r\n\r\nIf useState's setState is called in a closed window, it hangs the browser (at least Chrome). I agree that this seems like a weird issue, but we do this all of the time in our plugin we've built for an application that has iframe based UI.\r\n\r\nThis reproduces it. Just click \"Do it\". Note that your codesandbox service worker will spin up to 100% cpu and I can't figure out a way to stop it other than to kill that task in the Chrome task manager\r\n\r\nhttps://codesandbox.io/s/react-setstate-on-hidden-window-hangs-repro-cixqn\r\n\r\n**What is the expected behavior?**\r\n\r\nNo hang, it should just ignore the setState call, ideally.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.9. I'm not sure, but hooks are fairly new. This reproduces in Chrome 76, but not Firefox as far as I can tell.\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16583",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16583/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16583/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16583/events",
    "html_url": "https://github.com/facebook/react/issues/16583",
    "id": 485756074,
    "node_id": "MDU6SXNzdWU0ODU3NTYwNzQ=",
    "number": 16583,
    "title": "IE11 polyfill seems to be not working with react-scripts build",
    "user": {
      "login": "sarathsp",
      "id": 8438221,
      "node_id": "MDQ6VXNlcjg0MzgyMjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8438221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sarathsp",
      "html_url": "https://github.com/sarathsp",
      "followers_url": "https://api.github.com/users/sarathsp/followers",
      "following_url": "https://api.github.com/users/sarathsp/following{/other_user}",
      "gists_url": "https://api.github.com/users/sarathsp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sarathsp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sarathsp/subscriptions",
      "organizations_url": "https://api.github.com/users/sarathsp/orgs",
      "repos_url": "https://api.github.com/users/sarathsp/repos",
      "events_url": "https://api.github.com/users/sarathsp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sarathsp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 620368407,
        "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
        "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
        "name": "Resolution: Needs More Information",
        "color": "fffde7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-08-27T11:36:47Z",
    "updated_at": "2019-08-27T14:05:32Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Imported below polyfills in the index.js and using react-scripts build for creating the bundle as suggested for fixing the initial page loading issue.\r\n```js\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable'\r\n```\r\nBut seems to be not working after the initial page load and throwing invalid object error in console with details like invalid symbol and is happening while doing a `this.props.history.push` method call and an error seems to be occurring from `confirmTransitionTo` method in `history` as anonymous function.\r\n\r\nAlso using the below browser list\r\n```json\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\",\r\n      \"ie 11\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\",\r\n      \"ie 11\"\r\n    ]\r\n  }\r\n```\r\n\r\nUsing below version for react/ react scripts/polyfill.\r\n```json\r\n\"react-scripts\": \"^3.1.1\",\r\n \"react\": \"^16.8.6\",\r\n \"react-app-polyfill\": \"^1.0.2\",\r\n```\r\n\r\nPlease let me know if any one else face this similar issues and any working fixes.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16578",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16578/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16578/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16578/events",
    "html_url": "https://github.com/facebook/react/pull/16578",
    "id": 485586417,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzExMjAyMDcz",
    "number": 16578,
    "title": "prevent firefox marking required textareas invalid",
    "user": {
      "login": "halvves",
      "id": 9411730,
      "node_id": "MDQ6VXNlcjk0MTE3MzA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9411730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/halvves",
      "html_url": "https://github.com/halvves",
      "followers_url": "https://api.github.com/users/halvves/followers",
      "following_url": "https://api.github.com/users/halvves/following{/other_user}",
      "gists_url": "https://api.github.com/users/halvves/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/halvves/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/halvves/subscriptions",
      "organizations_url": "https://api.github.com/users/halvves/orgs",
      "repos_url": "https://api.github.com/users/halvves/repos",
      "events_url": "https://api.github.com/users/halvves/events{/privacy}",
      "received_events_url": "https://api.github.com/users/halvves/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-08-27T05:09:36Z",
    "updated_at": "2019-08-27T17:21:52Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/16578",
      "html_url": "https://github.com/facebook/react/pull/16578",
      "diff_url": "https://github.com/facebook/react/pull/16578.diff",
      "patch_url": "https://github.com/facebook/react/pull/16578.patch"
    },
    "body": "Bug was caused by an IE10/IE11 bugfix dealing with the placeholder attribute and textContent. Solved by avoiding the IE bugfix when textContent was empty.\r\n\r\nCloses #16402 \r\n\r\n## Test Plan\r\n\r\nOpen up DOM test fixtures and compare (in Firefox)...\r\n\r\nlocal: http://screeching-degree.surge.sh/textareas\r\nto latest: http://screeching-degree.surge.sh/textareas?version=16.9.0\r\n\r\n...and verify that textareas are no longer marked invalid on load when required.\r\n\r\nAlso confirm that the origin IE bugfix is still functioning as intended."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16573",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16573/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16573/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16573/events",
    "html_url": "https://github.com/facebook/react/issues/16573",
    "id": 485401156,
    "node_id": "MDU6SXNzdWU0ODU0MDExNTY=",
    "number": 16573,
    "title": "[react-hooks/exhaustive-deps] missed warning when passing a function",
    "user": {
      "login": "whatisaphone",
      "id": 772985,
      "node_id": "MDQ6VXNlcjc3Mjk4NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/772985?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/whatisaphone",
      "html_url": "https://github.com/whatisaphone",
      "followers_url": "https://api.github.com/users/whatisaphone/followers",
      "following_url": "https://api.github.com/users/whatisaphone/following{/other_user}",
      "gists_url": "https://api.github.com/users/whatisaphone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/whatisaphone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/whatisaphone/subscriptions",
      "organizations_url": "https://api.github.com/users/whatisaphone/orgs",
      "repos_url": "https://api.github.com/users/whatisaphone/repos",
      "events_url": "https://api.github.com/users/whatisaphone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/whatisaphone/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-08-26T19:19:58Z",
    "updated_at": "2019-08-26T19:19:58Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nArguably a **bug** in eslint-plugin-react-hooks\r\n\r\n**What is the current behavior?**\r\n\r\nThe exhaustive-deps rule does not catch the following case:\r\n\r\n```js\r\nconst FooContext = React.createContext(() => {});\r\n\r\n// Meanwhile, somewhere deep in the component tree\r\nfunction Bar() {\r\n  const foo = useContext(FooContext);\r\n  useEffect(foo, []);\r\n  return <div>A div walks into a Bar…</div>;\r\n}\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\nI think the plugin should suggest adding the dependency on `foo`:\r\n\r\n```js\r\nuseEffect(foo, [foo]);\r\n```\r\n\r\nIt already makes this suggestion for the verbose form of the code:\r\n\r\n```js\r\n// This code:\r\nuseEffect(() => foo(), []);\r\n// is fixed to:\r\nuseEffect(() => foo(), [foo]);\r\n```\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n- eslint@6.2.2\r\n- eslint-plugin-react-hooks@2.0.1\r\n- react@16.9.0"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16566",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16566/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16566/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16566/events",
    "html_url": "https://github.com/facebook/react/issues/16566",
    "id": 484952225,
    "node_id": "MDU6SXNzdWU0ODQ5NTIyMjU=",
    "number": 16566,
    "title": "onMouseEnter event missing when component hides on top of another (i.e. contextual menu)",
    "user": {
      "login": "ivalduan",
      "id": 2285554,
      "node_id": "MDQ6VXNlcjIyODU1NTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2285554?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivalduan",
      "html_url": "https://github.com/ivalduan",
      "followers_url": "https://api.github.com/users/ivalduan/followers",
      "following_url": "https://api.github.com/users/ivalduan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivalduan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivalduan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivalduan/subscriptions",
      "organizations_url": "https://api.github.com/users/ivalduan/orgs",
      "repos_url": "https://api.github.com/users/ivalduan/repos",
      "events_url": "https://api.github.com/users/ivalduan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivalduan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-08-25T16:56:06Z",
    "updated_at": "2019-08-26T19:44:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I provide a codepen example showcasing the issue here,\r\nhttps://codepen.io/ivalduan/pen/VwZpmMQ\r\n\r\n1. The component on the screen tracks correctly a hover state of the mouse pointer\r\n2. With the right button you create a contextual menu without covering the text and the hover state is correct when the mouse is over the menu\r\n3. When you select and option of the contextual menu on top of the background component the second does not receive an onMouseEnter event and the hover state remains false when it should be true"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16564",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16564/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16564/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16564/events",
    "html_url": "https://github.com/facebook/react/issues/16564",
    "id": 484778506,
    "node_id": "MDU6SXNzdWU0ODQ3Nzg1MDY=",
    "number": 16564,
    "title": "Firefox browser console opens randomly blank after installing react dev tools",
    "user": {
      "login": "dehghani-mehdi",
      "id": 9152330,
      "node_id": "MDQ6VXNlcjkxNTIzMzA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9152330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dehghani-mehdi",
      "html_url": "https://github.com/dehghani-mehdi",
      "followers_url": "https://api.github.com/users/dehghani-mehdi/followers",
      "following_url": "https://api.github.com/users/dehghani-mehdi/following{/other_user}",
      "gists_url": "https://api.github.com/users/dehghani-mehdi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dehghani-mehdi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dehghani-mehdi/subscriptions",
      "organizations_url": "https://api.github.com/users/dehghani-mehdi/orgs",
      "repos_url": "https://api.github.com/users/dehghani-mehdi/repos",
      "events_url": "https://api.github.com/users/dehghani-mehdi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dehghani-mehdi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710573595,
        "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
        "name": "Component: Developer Tools",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-08-24T04:50:05Z",
    "updated_at": "2019-08-26T04:27:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi,\r\n\r\nFirefox v68.0.2\r\nReact dev tools: latest version\r\n\r\nAfter disabling React dev tools same tab works as expected.\r\n\r\np.s: this happens mostly on non-react tabs.\r\n\r\nI just started using react dev tools and I don't know about prev version of Firefox or React dev tools btw."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16558",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16558/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16558/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16558/events",
    "html_url": "https://github.com/facebook/react/issues/16558",
    "id": 484593900,
    "node_id": "MDU6SXNzdWU0ODQ1OTM5MDA=",
    "number": 16558,
    "title": "Have useDebugValue return the value it's passed",
    "user": {
      "login": "TedDriggs",
      "id": 4805575,
      "node_id": "MDQ6VXNlcjQ4MDU1NzU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4805575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TedDriggs",
      "html_url": "https://github.com/TedDriggs",
      "followers_url": "https://api.github.com/users/TedDriggs/followers",
      "following_url": "https://api.github.com/users/TedDriggs/following{/other_user}",
      "gists_url": "https://api.github.com/users/TedDriggs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TedDriggs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TedDriggs/subscriptions",
      "organizations_url": "https://api.github.com/users/TedDriggs/orgs",
      "repos_url": "https://api.github.com/users/TedDriggs/repos",
      "events_url": "https://api.github.com/users/TedDriggs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TedDriggs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-08-23T15:39:30Z",
    "updated_at": "2019-08-23T15:39:30Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?** Feature\r\n\r\n**What is the current behavior?** Currently, `useDebugValue` returns nothing. This means the debug value must be extracted to a local variable if it is also to be returned or passed to another function.\r\n\r\n**What is the desired behavior?** Change the function to return its first argument, instead of nothing.\r\n\r\n```typescript\r\nfunction useDebugValue<T>(value: T, format?: (value: T) => any): T;\r\n```\r\n\r\nThis will make it really lightweight for library hooks to provide good debugging experiences.\r\n\r\nIt's worth noting that the `dbg!` macro in Rust [does the same thing](https://doc.rust-lang.org/std/macro.dbg.html)."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16555",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16555/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16555/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16555/events",
    "html_url": "https://github.com/facebook/react/pull/16555",
    "id": 484546823,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEwNDAwMzUz",
    "number": 16555,
    "title": "Draft: Add trusted types to react on server side",
    "user": {
      "login": "Siegrift",
      "id": 22679154,
      "node_id": "MDQ6VXNlcjIyNjc5MTU0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22679154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Siegrift",
      "html_url": "https://github.com/Siegrift",
      "followers_url": "https://api.github.com/users/Siegrift/followers",
      "following_url": "https://api.github.com/users/Siegrift/following{/other_user}",
      "gists_url": "https://api.github.com/users/Siegrift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Siegrift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Siegrift/subscriptions",
      "organizations_url": "https://api.github.com/users/Siegrift/orgs",
      "repos_url": "https://api.github.com/users/Siegrift/repos",
      "events_url": "https://api.github.com/users/Siegrift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Siegrift/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-23T14:01:19Z",
    "updated_at": "2019-08-23T14:06:18Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/16555",
      "html_url": "https://github.com/facebook/react/pull/16555",
      "diff_url": "https://github.com/facebook/react/pull/16555.diff",
      "patch_url": "https://github.com/facebook/react/pull/16555.patch"
    },
    "body": "## Trusted Types\r\n[Trusted Types](https://github.com/WICG/trusted-types) ([spec](https://wicg.github.io/trusted-types/dist/spec/), [introductory article](https://developers.google.com/web/updates/2019/02/trusted-types)) is a new experimental DOM API implemented within the WICG , with a working [Chrome implementation](https://www.chromestatus.com/feature/5650088592408576).\r\n\r\nThe API creates a few new objects available on the global object in the browser, like most other web APIs ([impl in TS](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/trusted-types/index.d.ts) and in [Closure compiler](https://github.com/WICG/trusted-types/blob/master/externs/externs.js)).\r\n\r\nUnder certain conditions, controlled by a HTTP header (analogous to Content-Security-Policy behavior), the API can enable the enforcement - then it changes the signature of several DOM API functions and property setters, such that they accept specific object types, and reject strings. Colloquially, DOM API becomes strongly typed.\r\n\r\nFor example, with Trusted Types Element.innerHTML property setter accepts a TrustedHTML object.\r\n\r\nTrusted Type objects stringify to their inner value. This API shape is a deliberate choice that enables existing web applications and libraries to gradually migrate from strings to Trusted Types without breaking functionality. In our example, it makes it possible to write the following:\r\n\r\n```javascript\r\nconst policy = TrustedTypes.createPolicy('foo', { \r\n  createHTML: (s) => { /* some validation*/; return s} \r\n});\r\n\r\nconst trustedHTML = policy.createHTML('bar');\r\nanElement.innerHTML = trustedHTML\r\n\r\nanElement.innerHTML === 'bar'\r\n```\r\n\r\nThe above code works regardless if the Trusted Types enforcement is enabled or not.\r\n\r\nReading from the DOM is unaffected, so Element.innerHTML getter returns a string. That's for practical reasons -- web applications read from DOM more often than they write to it, and only writing exposes the application to DOM XSS risks. Typing only the setters allows us to secure web applications with minimal code changes.\r\n\r\n## Adding Trusted Types to React for server side\r\nUnfortunately, there are no Trusted Types (TT) on server side. However, it’s really easy to introduce a reflected xss attack via server side rendering. Markup rendered on server side is rendered to string (without any DOM emulation) and returned as a response from the server and there is no way TT can prevent this attack. This creates inconsistency when rendering on client and server side (client side would fail with TT violation), which shouldn’t happen. Also, if application uses hot reloading, you will get a TT error after each reload (because React templates are re-rendered to DOM, this time on client).\r\n\r\nThis PR enables applications to use Trusted Types on server side. Functions inside [ReactDOMNodeStreamRenderer.js](https://github.com/facebook/react/blob/fc807720780962729df2ad1b0f53258603c020c7/packages/react-dom/src/server/ReactDOMStringRenderer.js) and [ReactDOMStringRenderer.js](https://github.com/facebook/react/blob/fc807720780962729df2ad1b0f53258603c020c7/packages/react-dom/src/server/ReactDOMNodeStreamRenderer.js) in react-dom/server package now accept optional third parameter with [trusted types polyfill implementation](https://github.com/WICG/trusted-types). If TT are provided, they are enforced, **otherwise no behavioral change is made**. If TT are enforced, we check whether the values are trusted before creating the markup from them and throw an error otherwise.   \r\n\r\n## Reference\r\n* [Add trusted types to react on client side](https://github.com/facebook/react/pull/16157)\r\n\r\n## Draft PR\r\nPR uses a specific function of TT called [getPropertyType](https://wicg.github.io/trusted-types/dist/spec/#dom-trustedtypepolicyfactory-getpropertytype) which is used to enforce a trusted value for property of an element. This function currently accepts **element tag name**, but it might be changed shortly to **element constructor name**.\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16550",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16550/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16550/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16550/events",
    "html_url": "https://github.com/facebook/react/issues/16550",
    "id": 484304478,
    "node_id": "MDU6SXNzdWU0ODQzMDQ0Nzg=",
    "number": 16550,
    "title": "Devtools scrollbar hides flamegraph",
    "user": {
      "login": "Curzy",
      "id": 3931792,
      "node_id": "MDQ6VXNlcjM5MzE3OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3931792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Curzy",
      "html_url": "https://github.com/Curzy",
      "followers_url": "https://api.github.com/users/Curzy/followers",
      "following_url": "https://api.github.com/users/Curzy/following{/other_user}",
      "gists_url": "https://api.github.com/users/Curzy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Curzy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Curzy/subscriptions",
      "organizations_url": "https://api.github.com/users/Curzy/orgs",
      "repos_url": "https://api.github.com/users/Curzy/repos",
      "events_url": "https://api.github.com/users/Curzy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Curzy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710573595,
        "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
        "name": "Component: Developer Tools",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-08-23T02:55:42Z",
    "updated_at": "2019-08-23T14:43:50Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nbug\r\n**What is the current behavior?**\r\nscrollbar is covering flamegraph\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\ncurrent\r\n![current](https://user-images.githubusercontent.com/3931792/63563638-b09a8f00-c59c-11e9-95fc-627dcea023b6.png)\r\n\r\nwithout scrollbar, there is more graphs hidden by scrollbar\r\n![without scrollbar](https://user-images.githubusercontent.com/3931792/63563645-b8f2ca00-c59c-11e9-917e-8c63be90cb2d.png)\r\n\r\n**What is the expected behavior?**\r\nscrollbar does not cover flame graph or if flamegraph's height is long enough to use scrollbar, flamegraph container's width should shrink about scrollbars width \r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n16.9 / chrome 78.0.3887.7 / macOS 10.14.6 /  \r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/16548",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/16548/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/16548/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/16548/events",
    "html_url": "https://github.com/facebook/react/issues/16548",
    "id": 484103767,
    "node_id": "MDU6SXNzdWU0ODQxMDM3Njc=",
    "number": 16548,
    "title": "Devtools: Impossible to debug firefox webextension moz-extension: pages due to strict CSP",
    "user": {
      "login": "saneyuki",
      "id": 180104,
      "node_id": "MDQ6VXNlcjE4MDEwNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/180104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saneyuki",
      "html_url": "https://github.com/saneyuki",
      "followers_url": "https://api.github.com/users/saneyuki/followers",
      "following_url": "https://api.github.com/users/saneyuki/following{/other_user}",
      "gists_url": "https://api.github.com/users/saneyuki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saneyuki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saneyuki/subscriptions",
      "organizations_url": "https://api.github.com/users/saneyuki/orgs",
      "repos_url": "https://api.github.com/users/saneyuki/repos",
      "events_url": "https://api.github.com/users/saneyuki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saneyuki/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710573595,
        "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
        "name": "Component: Developer Tools",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 121709921,
        "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
        "name": "Type: Feature Request",
        "color": "c7def8",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-22T16:46:40Z",
    "updated_at": "2019-08-29T02:59:11Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\n* feature request\r\n* Original issue is: https://github.com/facebook/react-devtools/issues/922\r\n   * There are more details.\r\n* Mozilla's Bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1573027\r\n\r\n**What is the current behavior?**\r\n\r\nThe react-devtools toolbar button does not light up and clicking on it says \"This page does not appear to be using react\". This is probably since extensions are not allowed to inject scripts into other extensions' pages.\r\n\r\n**What is the expected behavior?**\r\n\r\nThe react-devtools toolbar button should light up and the addon should be able to debug the page\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nThis is still reproducible\r\n\r\n* Firefox v68~\r\n* react devtools v4.0.5\r\n* react v16.9\r\n"
  }
]
